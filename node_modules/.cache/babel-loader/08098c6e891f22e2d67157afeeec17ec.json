{"ast":null,"code":"var _jsxFileName = \"/Users/hilarydenton/Dropbox/Javascript Interview problems/react interview problem/src/components/Person.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nvar Person = function Person(_ref) {\n  var name = _ref.name,\n      height = _ref.height,\n      mass = _ref.mass,\n      gender = _ref.gender,\n      homeworld = _ref.homeworld,\n      getHomeWorldForUser = _ref.getHomeWorldForUser;\n  return React.createElement(\"div\", {\n    className: \"person\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, console.warn('I RENDERED'), React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, name), React.createElement(\"span\", {\n    className: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, height, isNaN(height) ? \"\" : \"m\"), \" | \", React.createElement(\"span\", {\n    className: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, mass, isNaN(mass) ? \"\" : \"kg\"), \" | \", React.createElement(\"span\", {\n    className: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, gender), React.createElement(\"button\", {\n    onClick: function onClick(e) {\n      return getHomeWorldForUser(homeworld);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Homeworld\"));\n};\n\nPerson.propTypes = {\n  person: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    height: PropTypes.string.isRequired,\n    mass: PropTypes.string.isRequired,\n    gender: PropTypes.string.isRequired,\n    homeworld: PropTypes.string.isRequired\n  }).isRequired\n};\nexport default Person;","map":{"version":3,"sources":["/Users/hilarydenton/Dropbox/Javascript Interview problems/react interview problem/src/components/Person.js"],"names":["React","PropTypes","Person","name","height","mass","gender","homeworld","getHomeWorldForUser","console","warn","isNaN","e","propTypes","person","shape","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,MACbC,IADa,QACbA,IADa;AAAA,MACPC,MADO,QACPA,MADO;AAAA,MACCC,IADD,QACCA,IADD;AAAA,MACOC,MADP,QACOA,MADP;AAAA,MACeC,SADf,QACeA,SADf;AAAA,MAEbC,mBAFa,QAEbA,mBAFa;AAAA,SAIb;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIC,OAAO,CAACC,IAAR,CAAa,YAAb,CADJ,EAEE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBP,IAAxB,CAFF,EAGE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MADH,EAEGO,KAAK,CAACP,MAAD,CAAL,GAAgB,EAAhB,GAAqB,GAFxB,CAHF,EAOG,KAPH,EAQE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IADH,EAEGM,KAAK,CAACN,IAAD,CAAL,GAAc,EAAd,GAAmB,IAFtB,CARF,EAYG,KAZH,EAaE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBC,MAAxB,CAbF,EAcE;AAAQ,IAAA,OAAO,EAAE,iBAAAM,CAAC;AAAA,aAAIJ,mBAAmB,CAACD,SAAD,CAAvB;AAAA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAdF,CAJa;AAAA,CAAf;;AAsBAL,MAAM,CAACW,SAAP,GAAmB;AACjBC,EAAAA,MAAM,EAAEb,SAAS,CAACc,KAAV,CAAgB;AACtBZ,IAAAA,IAAI,EAAEF,SAAS,CAACe,MAAV,CAAiBC,UADD;AAEtBb,IAAAA,MAAM,EAAEH,SAAS,CAACe,MAAV,CAAiBC,UAFH;AAGtBZ,IAAAA,IAAI,EAAEJ,SAAS,CAACe,MAAV,CAAiBC,UAHD;AAItBX,IAAAA,MAAM,EAAEL,SAAS,CAACe,MAAV,CAAiBC,UAJH;AAKtBV,IAAAA,SAAS,EAAEN,SAAS,CAACe,MAAV,CAAiBC;AALN,GAAhB,EAMLA;AAPc,CAAnB;AAUA,eAAef,MAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Person = ({\n  name, height, mass, gender, homeworld,\n  getHomeWorldForUser\n}) => (\n  <div className=\"person\">\n    { console.warn('I RENDERED') }\n    <div className=\"title\">{name}</div>\n    <span className=\"text\">\n      {height}\n      {isNaN(height) ? \"\" : \"m\"}\n    </span>\n    {\" | \"}\n    <span className=\"text\">\n      {mass}\n      {isNaN(mass) ? \"\" : \"kg\"}\n    </span>\n    {\" | \"}\n    <span className=\"text\">{gender}</span>\n    <button onClick={e => getHomeWorldForUser(homeworld)}>Homeworld</button>\n  </div>\n);\n\nPerson.propTypes = {\n  person: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    height: PropTypes.string.isRequired,\n    mass: PropTypes.string.isRequired,\n    gender: PropTypes.string.isRequired,\n    homeworld: PropTypes.string.isRequired\n  }).isRequired\n};\n\nexport default Person;\n"]},"metadata":{},"sourceType":"module"}