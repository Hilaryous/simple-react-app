{"ast":null,"code":"import _objectSpread from \"/Users/hilarydenton/Dropbox/Javascript Interview problems/react interview problem/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/hilarydenton/Dropbox/Javascript Interview problems/react interview problem/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hilarydenton/Dropbox/Javascript Interview problems/react interview problem/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hilarydenton/Dropbox/Javascript Interview problems/react interview problem/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hilarydenton/Dropbox/Javascript Interview problems/react interview problem/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hilarydenton/Dropbox/Javascript Interview problems/react interview problem/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hilarydenton/Dropbox/Javascript Interview problems/react interview problem/src/context.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nvar Context = React.createContext();\n\nvar PeopleContextProvider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PeopleContextProvider, _Component);\n\n  function PeopleContextProvider() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PeopleContextProvider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PeopleContextProvider)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      people: [],\n      homeworld: {}\n    };\n\n    _this.getHomeWorldForUser = function (url) {\n      fetch(url).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        _this.setState({\n          homeworld: res\n        });\n      });\n    };\n\n    _this.timer = null;\n\n    _this.filterPeopleByName = function (name) {\n      //they're performing a new search, empty out the homeworld panel\n      _this.setState({\n        homeworld: {}\n      });\n\n      name = name.trim();\n\n      if (name.length === 0) {\n        //if they clear out the search box, empty the results\n        _this.setState({\n          people: []\n        });\n      } else {\n        //use a timer so we don't make unnecessary api requests (reset the 0.5 second timeout onchange)\n        clearTimeout(_this.timer);\n        _this.timer = setTimeout(_this.fetchPeople, 500, name);\n      }\n    };\n\n    _this.fetchPeople = function (name) {\n      fetch(\"https://swapi.co/api/people?search=\".concat(name)).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        _this.setState({\n          people: res.results\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PeopleContextProvider, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return React.createElement(Context.Provider, {\n        value: _objectSpread({}, this.state, {\n          filterPeopleByName: this.filterPeopleByName,\n          getHomeWorldForUser: this.getHomeWorldForUser\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, children);\n    }\n  }]);\n\n  return PeopleContextProvider;\n}(Component);\n\nPeopleContextProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default {\n  Provider: PeopleContextProvider,\n  Consumer: Context.Consumer\n};","map":{"version":3,"sources":["/Users/hilarydenton/Dropbox/Javascript Interview problems/react interview problem/src/context.js"],"names":["React","Component","PropTypes","Context","createContext","PeopleContextProvider","state","people","homeworld","getHomeWorldForUser","url","fetch","then","res","json","setState","timer","filterPeopleByName","name","trim","length","clearTimeout","setTimeout","fetchPeople","results","children","props","propTypes","node","isRequired","Provider","Consumer"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,OAAO,GAAGH,KAAK,CAACI,aAAN,EAAhB;;IAEMC,qB;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,SAAS,EAAE;AAFL,K;;UAKRC,mB,GAAsB,UAAAC,GAAG,EAAI;AAC3BC,MAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX,EAEGF,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACX,cAAKE,QAAL,CAAc;AACZP,UAAAA,SAAS,EAAEK;AADC,SAAd;AAGD,OANH;AAOD,K;;UAEDG,K,GAAQ,I;;UACRC,kB,GAAqB,UAAAC,IAAI,EAAI;AAC3B;AACA,YAAKH,QAAL,CAAc;AAAEP,QAAAA,SAAS,EAAE;AAAb,OAAd;;AACAU,MAAAA,IAAI,GAAGA,IAAI,CAACC,IAAL,EAAP;;AACA,UAAID,IAAI,CAACE,MAAL,KAAgB,CAApB,EAAuB;AACrB;AACA,cAAKL,QAAL,CAAc;AAAER,UAAAA,MAAM,EAAE;AAAV,SAAd;AACD,OAHD,MAGO;AACL;AACAc,QAAAA,YAAY,CAAC,MAAKL,KAAN,CAAZ;AACA,cAAKA,KAAL,GAAaM,UAAU,CAAC,MAAKC,WAAN,EAAmB,GAAnB,EAAwBL,IAAxB,CAAvB;AACD;AACF,K;;UAEDK,W,GAAc,UAAAL,IAAI,EAAI;AACpBP,MAAAA,KAAK,8CAAuCO,IAAvC,EAAL,CACGN,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX,EAEGF,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACX,cAAKE,QAAL,CAAc;AACZR,UAAAA,MAAM,EAAEM,GAAG,CAACW;AADA,SAAd;AAGD,OANH;AAOD,K;;;;;;;6BAEQ;AAAA,UACCC,QADD,GACc,KAAKC,KADnB,CACCD,QADD;AAEP,aACE,oBAAC,OAAD,CAAS,QAAT;AACE,QAAA,KAAK,oBACA,KAAKnB,KADL;AAEHW,UAAAA,kBAAkB,EAAE,KAAKA,kBAFtB;AAGHR,UAAAA,mBAAmB,EAAE,KAAKA;AAHvB,UADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOGgB,QAPH,CADF;AAWD;;;;EAtDiCxB,S;;AAwDpCI,qBAAqB,CAACsB,SAAtB,GAAkC;AAChCF,EAAAA,QAAQ,EAAEvB,SAAS,CAAC0B,IAAV,CAAeC;AADO,CAAlC;AAIA,eAAe;AAAEC,EAAAA,QAAQ,EAAEzB,qBAAZ;AAAmC0B,EAAAA,QAAQ,EAAE5B,OAAO,CAAC4B;AAArD,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Context = React.createContext();\n\nclass PeopleContextProvider extends Component {\n  state = {\n    people: [],\n    homeworld: {}\n  };\n\n  getHomeWorldForUser = url => {\n    fetch(url)\n      .then(res => res.json())\n      .then(res => {\n        this.setState({\n          homeworld: res\n        });\n      });\n  }; // eslint-disable-line no-unused-vars\n\n  timer = null;\n  filterPeopleByName = name => {\n    //they're performing a new search, empty out the homeworld panel\n    this.setState({ homeworld: {} });\n    name = name.trim();\n    if (name.length === 0) {\n      //if they clear out the search box, empty the results\n      this.setState({ people: [] });\n    } else {\n      //use a timer so we don't make unnecessary api requests (reset the 0.5 second timeout onchange)\n      clearTimeout(this.timer);\n      this.timer = setTimeout(this.fetchPeople, 500, name);\n    }\n  }; // eslint-disable-line no-unused-vars\n\n  fetchPeople = name => {\n    fetch(`https://swapi.co/api/people?search=${name}`)\n      .then(res => res.json())\n      .then(res => {\n        this.setState({\n          people: res.results\n        });\n      });\n  };\n\n  render() {\n    const { children } = this.props;\n    return (\n      <Context.Provider\n        value={{\n          ...this.state,\n          filterPeopleByName: this.filterPeopleByName,\n          getHomeWorldForUser: this.getHomeWorldForUser\n        }}\n      >\n        {children}\n      </Context.Provider>\n    );\n  }\n}\nPeopleContextProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default { Provider: PeopleContextProvider, Consumer: Context.Consumer };\n"]},"metadata":{},"sourceType":"module"}